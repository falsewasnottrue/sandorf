object Hackerz extends App {

  def visible(s: String): String = s.map {
    case '0' => ' '
    case '1' => '#'
    case x => x
  }

  val text
  println(text.size)

  val bytes: Array[Byte] = text.grouped(8).toArray.map(java.lang.Byte.parseByte(_, 2))
  println(bytes.size)

  val res = new String(bytes)
  println(res)
}
